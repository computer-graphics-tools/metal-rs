//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT

use objc2::rc::{Allocated, Retained};
use objc2::{extern_class, extern_conformance, extern_methods};
use objc2_foundation::{CopyingHelper, NSCopying, NSObject, NSObjectProtocol, NSString};

use crate::*;

extern_class!(
    /// Serves as the base descriptor for creating a Metal library.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metal/mtl4librarydescriptor?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTL4LibraryDescriptor;
);

extern_conformance!(
    unsafe impl NSCopying for MTL4LibraryDescriptor {}
);

unsafe impl CopyingHelper for MTL4LibraryDescriptor {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MTL4LibraryDescriptor {}
);

impl MTL4LibraryDescriptor {
    extern_methods!(
        /// Assigns an optional string containing the source code of the shader language program to compile into a
        /// Metal library.
        #[unsafe(method(source))]
        #[unsafe(method_family = none)]
        pub unsafe fn source(&self) -> Option<Retained<NSString>>;

        /// Setter for [`source`][Self::source].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setSource:))]
        #[unsafe(method_family = none)]
        pub unsafe fn set_source(&self, source: Option<&NSString>);

        /// Provides compile-time options for the Metal library.
        #[unsafe(method(options))]
        #[unsafe(method_family = none)]
        pub unsafe fn options(&self) -> Option<Retained<MTLCompileOptions>>;

        /// Setter for [`options`][Self::options].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setOptions:))]
        #[unsafe(method_family = none)]
        pub unsafe fn set_options(&self, options: Option<&MTLCompileOptions>);

        /// Assigns an optional name to the Metal library.
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Option<Retained<NSString>>;

        /// Setter for [`name`][Self::name].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn set_name(&self, name: Option<&NSString>);
    );
}

/// Methods declared on superclass `NSObject`.
impl MTL4LibraryDescriptor {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
